spring:
  application:
    name: maxxGlobal

  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/nafx
    username: nafxadmin
    password: Nafx2025!PostgreSQL
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 100
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
    database: postgresql
    open-in-view: false

  # File Upload Configuration
  servlet:
    multipart:
      enabled: true
      max-file-size: 5MB
      max-request-size: 50MB
      file-size-threshold: 2KB

  # Static Resources Configuration
  web:
    resources:
      static-locations: file:uploads/,classpath:/static/
      cache:
        period: 86400
        cachecontrol:
          max-age: 86400
          cache-public: true

  mvc:
    static-path-pattern: /**

  # Thymeleaf Configuration for Email Templates
  thymeleaf:
    cache: true
    mode: HTML
    encoding: UTF-8
    prefix: classpath:/templates/
    suffix: .html
    check-template-location: true

  # Mail Configuration
  mail:
    default-encoding: UTF-8
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  # Async Task Configuration
  task:
    execution:
      pool:
        core-size: 5
        max-size: 15
        queue-capacity: 100
      thread-name-prefix: "async-mail-"
    scheduling:
      pool:
        size: 2
      thread-name-prefix: "scheduled-mail-"

# JWT Security Configuration
application:
  security:
    jwt:
      secret-key: ZmFrZXNlY3JldGtleWZvcm1heGdsb2JhbA==
      expiration: 86400000

# Swagger/OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
    enabled: false
  swagger-ui:
    path: /swagger-ui.html
    enabled: false

# Application Configuration
# Application Configuration
app:
  name: "Ortopedi Sipariş Sistemi"
  description: "Ortopedi ameliyat malzemeleri için B2B sipariş yönetim sistemi"
  version: "1.0.0"
  base-url: ${APP_BASE_URL:https://nafx.tr}

  file:
    upload-dir: "uploads"
    product-images-dir: "products"
    base-url: ${APP_BASE_URL:https://nafx.tr}
    allowed-extensions: ["jpg", "jpeg", "png", "gif", "webp"]
    max-image-size: 5242880
    static-url-pattern: "/uploads/**"
    cache-period: 86400

  excel:
    max-rows: 10000
    batch-size: 100
    date-format: "dd.MM.yyyy HH:mm"
    supported-currencies: ["TRY", "USD", "EUR"]

  mail:
    enabled: ${MAIL_ENABLED:true}
    async-enabled: ${MAIL_ASYNC_ENABLED:true}
    retry-attempts: ${MAIL_RETRY_ATTEMPTS:3}
    retry-delay: ${MAIL_RETRY_DELAY:2000}
    template-cache: ${MAIL_TEMPLATE_CACHE:true}
    batch-size: ${MAIL_BATCH_SIZE:10}
    pdf-attachment:
      enabled: ${MAIL_PDF_ATTACHMENT_ENABLED:true}
      max-size-mb: ${MAIL_PDF_MAX_SIZE_MB:10}
      include-in-new-order: ${MAIL_PDF_NEW_ORDER:true}
      include-in-approved: ${MAIL_PDF_APPROVED:true}
      include-in-edited: ${MAIL_PDF_EDITED:true}
      include-in-rejected: ${MAIL_PDF_REJECTED:true}
      include-in-status-change: ${MAIL_PDF_STATUS_CHANGE:true}
    rate-limit:
      enabled: ${MAIL_RATE_LIMIT_ENABLED:true}
      max-per-minute: ${MAIL_RATE_LIMIT_MAX:50}
      max-per-hour: ${MAIL_RATE_LIMIT_HOUR:200}

  notifications:
    email:
      new-order:
        enabled: true
        subject-prefix: "Yeni Sipariş"
      order-approved:
        enabled: true
        subject-prefix: "Sipariş Onaylandı"
      order-rejected:
        enabled: true
        subject-prefix: "Sipariş Reddedildi"
      order-edited:
        enabled: true
        subject-prefix: "Sipariş Düzenlendi"
      status-change:
        enabled: true
        subject-prefix: "Sipariş Durumu"

# Logging Configuration
# Logging Configuration
logging:
  level:
    com.maxx_global: INFO
    org.springframework.web.servlet.resource: WARN
    root: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/maxx-global.log
  logback:
    rollingpolicy:
      max-file-size: 50MB
      max-history: 90

# Resend Configuration
resend:
  api-key: ${RESEND_API_KEY:re_GnzctAhU_DvegR2cQDQHKPLBnWMvobNRp}
  from-email: ${RESEND_FROM_EMAIL:noreply@nafx.tr}
  from-name: ${RESEND_FROM_NAME:MEDINTERA}

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized
  health:
    mail:
      enabled: ${HEALTH_CHECK_MAIL_ENABLED:true}